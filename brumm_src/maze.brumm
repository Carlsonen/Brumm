const display 123

use posx posy
use dirx diry
use e argx argy walls

# map data
    call store
        ldi e 255
        ldi i 0
    call store
        ldi e 133
        inc i
    call store
        ldi e 145
        inc i
    call store
        ldi e 165
        inc i
    call store
        ldi e 137
        inc i
    call store
        ldi e 163
        inc i
    call store
        ldi e 137
        inc i
    call store
        ldi e 255
        inc i
# 1 hot bits
    call store
        ldi e 1
        inc i
    call store
        lshift= e
        inc i
    call store
        lshift= e
        inc i
    call store
        lshift= e
        inc i
    call store
        lshift= e
        inc i
    call store
        lshift= e
        inc i
    call store
        lshift= e
        inc i
    call store
        lshift= e
        inc i

goto maze_start
    -
    -
def store
    return
        store e
        -



def maze_start
ldi posx 1
ldi posy 1
ldi dirx 0
ldi diry 1

-
-

def loop
# right
    call getwall
        add argx posx diry
        sub argy posy dirx
# front right
    call getwall
        add argx argx dirx
        add argy argy diry
# mid
    call getwall
        add argx posx dirx
        add argy posy diry
# left
    call getwall
        sub argx posx diry
        add argy posy dirx
# front left
    call getwall
        add argx argx dirx
        add argy argy diry
goto inputs
    point display
    -





# wall shit 14 instructions
def getwall
    add i argx 0
    ldi tmp 8
    add i argy tmp
    load e
    -
    load tmp
    and e tmp e
    if zero goto skip
        -
        -
        add walls walls walls
        return
    addci walls walls 0
    def skip
        -
        -
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
def inputs
    -
    -
    store walls
    halt
    -
    -
    load e
    if odd goto rotleft
        -
        -
        -
        rshift e e 0
    if odd goto rotright
        -
        -
        -
        rshift e e 0
    if odd goto move
        -
        -
        -
        rshift e e 0
    if odd goto toggle_wall
        -
        -
        -
        -
    goto loop
        -
        -
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
# moving
def move
    ldi tmp 4
    and 0 walls tmp
    if not zero goto loop
        -
        -
        -
        -
    goto loop
        add posx posx dirx
        add posy posy diry

# rotate right
def rotright
    add e dirx 0
    goto loop
        add dirx diry 0
        sub diry 0 e

# rotate left
def rotleft
    add e dirx 0
    goto loop
        sub dirx 0 diry
        add diry e 0

# toggle wall
def toggle_wall
    add argx posx dirx
    if zero goto loop
        -
        -
        ldi tmp 7
        sub 0 argx tmp
    if zero goto loop
        -
        -
        -
        add argy posy diry
    if zero goto loop
        -
        -
        ldi tmp 7
        sub 0 argy tmp
    if zero goto loop
        -
        -
        -
        -
    ldi tmp 8
    add i argy tmp
    -
    add i argx 0
    load e
    -
    load tmp
    xor e e tmp
    goto loop
        ldi i 126
        store e




